import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, InputMediaPhoto
import sqlite3

bot = telebot.TeleBot('6454664810:AAEv7EBHyP9gdLPJ1xyTRgnOBhoCyUSeXrI')
db = sqlite3.connect('bd.db', check_same_thread=False)
c = db.cursor()

user_positions = {}


@bot.message_handler(commands=['start'])
def start(message):
    user_positions[message.chat.id] = 1
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø –ø–æ–º–æ–≥—É –ª–µ–≥–∫–æ –∏ –±—ã—Å—Ç—Ä–æ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑.\n\n–ù–∞–∂–º–∏ –Ω–∞ ‚Üí/search‚Üê")


@bot.message_handler(commands=['search'])
def search(message):
    user_positions[message.chat.id] = 1
    show_product(message.chat.id, 1)


@bot.callback_query_handler(func=lambda call: call.data in ["prev", "next", "toItem"])
def handle_callback(call):
    user_id = call.message.chat.id
    current_pos = user_positions.get(user_id, 1)

    if call.data == "next":
        current_pos += 1
    elif call.data == "prev":
        current_pos -= 1
    elif call.data == "toItem":
        bot.send_message(user_id, "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–æ–≤–∞—Ä–µ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ.")
        return

    user_positions[user_id] = max(1, current_pos)
    show_product(user_id, user_positions[user_id], call)


def show_product(chat_id, position, call=None):
    c.execute("SELECT COUNT(*) FROM product")
    total_items = c.fetchone()[0]

    if position > total_items:
        position = total_items
    elif position < 1:
        position = 1

    c.execute(f"SELECT rowid, * FROM product WHERE rowid = ?", (position,))
    item = c.fetchone()

    if not item:
        bot.send_message(chat_id, "–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    markup = InlineKeyboardMarkup(row_width=2)
    if position > 1:
        markup.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="prev"))
    if position < total_items:
        markup.add(InlineKeyboardButton("–í–ø–µ—Ä—ë–¥ ‚û°Ô∏è", callback_data="next"))
    markup.add(InlineKeyboardButton("–ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="toItem"))

    photo_path = "photo_2024-12-16_00-38-07.jpg"

    try:
        if call:
            # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            bot.edit_message_media(
                media=InputMediaPhoto(open(photo_path, "rb"),
                                      caption=f"üõ† –¢–æ–≤–∞—Ä: {item[1]}\nüí∞ –¶–µ–Ω–∞: {item[2]} —Ä—É–±."),
                chat_id=chat_id,
                message_id=call.message.message_id,
                reply_markup=markup
            )
        else:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            bot.send_photo(
                chat_id=chat_id,
                photo=open(photo_path, "rb"),
                caption=f"üõ† –¢–æ–≤–∞—Ä: {item[1]}\nüí∞ –¶–µ–Ω–∞: {item[2]} —Ä—É–±.",
                reply_markup=markup
            )
    except Exception as e:
        bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–≤–∞—Ä–∞.")
        print(f"–û—à–∏–±–∫–∞: {e}")


bot.polling()